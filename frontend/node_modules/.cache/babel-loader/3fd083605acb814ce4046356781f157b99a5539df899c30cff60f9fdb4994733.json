{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// const AnalysisPage = () => {\n//   const [results, setResults] = useState('Loading...');\n//   const [error, setError] = useState(null);\n//   const location = useLocation(); // Use location to get the query parameters\n\n//   useEffect(() => {\n//     const urlParams = new URLSearchParams(location.search); // Get query params from URL\n//     const user = urlParams.get('user'); // Get the 'user' parameter\n\n//     if (!user) {\n//       setResults(\"No user specified.\");\n//     } else {\n//       fetch(`/process-photos/${user}`)\n//         .then(response => response.json())\n//         .then(data => {\n//           if (data.success) {\n//             setResults(JSON.stringify(data.results, null, 2));\n//           } else {\n//             setResults(data.message || 'Error fetching analysis results.');\n//           }\n//         })\n//         .catch(error => {\n//           setError(error.message);\n//           setResults('Error: ' + error.message);\n//         });\n//     }\n//   }, [location]); // Re-run the effect when the location changes\n\n//   return (\n//     <div>\n//       <h1>Analysis Results</h1>\n//       <pre>{results}</pre>\n//       {error && <div style={{ color: 'red' }}>Error: {error}</div>}\n//     </div>\n//   );\n// };\n\n// export default AnalysisPage;\n\n// import React, { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// const AnalysisPage = () => {\n//   const [analysisResults, setAnalysisResults] = useState([]);\n//   const [error, setError] = useState('');\n//   const location = useLocation();\n//   const queryParams = new URLSearchParams(location.search);\n//   const username = queryParams.get('user'); // Get the username from query params\n\n//   useEffect(() => {\n//     // Fetch analysis data for the user\n//     if (username) {\n//       fetch(`http://localhost:5000/fetch-analyze/${username}`)\n//         .then((response) => {\n//           if (!response.ok) {\n//             throw new Error('Failed to fetch analysis data.');\n//           }\n//           return response.json();\n//         })\n//         .then((data) => {\n//           if (data.success) {\n//             setAnalysisResults(data.results);\n//           } else {\n//             setError(data.message || 'No analysis data found.');\n//           }\n//         })\n//         .catch((err) => {\n//           setError(err.message);\n//         });\n//     }\n//   }, [username]);\n\n//   return (\n//     <div className=\"analysis-page\">\n//       <h1>Analysis Results for {username}</h1>\n//       {error && <p className=\"error-message\" style={{ color: 'red' }}>{error}</p>}\n//       <div id=\"analysis-container\">\n//         {analysisResults.length > 0 ? (\n//           analysisResults.map((result, index) => (\n//             <div key={index}>\n//               <img\n//                 src={`http://localhost:5000/${result.imagePath}`}\n//                 alt=\"User Image\"\n//                 style={{ width: '200px', margin: '10px' }}\n//               />\n//               <p>Analysis: {JSON.stringify(result.analysis)}</p>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No analysis results available.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AnalysisPage;","map":{"version":3,"names":[],"sources":["D:/sachin/frontend/src/components/AnalysisPage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\n// const AnalysisPage = () => {\r\n//   const [results, setResults] = useState('Loading...');\r\n//   const [error, setError] = useState(null);\r\n//   const location = useLocation(); // Use location to get the query parameters\r\n\r\n//   useEffect(() => {\r\n//     const urlParams = new URLSearchParams(location.search); // Get query params from URL\r\n//     const user = urlParams.get('user'); // Get the 'user' parameter\r\n\r\n//     if (!user) {\r\n//       setResults(\"No user specified.\");\r\n//     } else {\r\n//       fetch(`/process-photos/${user}`)\r\n//         .then(response => response.json())\r\n//         .then(data => {\r\n//           if (data.success) {\r\n//             setResults(JSON.stringify(data.results, null, 2));\r\n//           } else {\r\n//             setResults(data.message || 'Error fetching analysis results.');\r\n//           }\r\n//         })\r\n//         .catch(error => {\r\n//           setError(error.message);\r\n//           setResults('Error: ' + error.message);\r\n//         });\r\n//     }\r\n//   }, [location]); // Re-run the effect when the location changes\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Analysis Results</h1>\r\n//       <pre>{results}</pre>\r\n//       {error && <div style={{ color: 'red' }}>Error: {error}</div>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AnalysisPage;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\n// const AnalysisPage = () => {\r\n//   const [analysisResults, setAnalysisResults] = useState([]);\r\n//   const [error, setError] = useState('');\r\n//   const location = useLocation();\r\n//   const queryParams = new URLSearchParams(location.search);\r\n//   const username = queryParams.get('user'); // Get the username from query params\r\n\r\n//   useEffect(() => {\r\n//     // Fetch analysis data for the user\r\n//     if (username) {\r\n//       fetch(`http://localhost:5000/fetch-analyze/${username}`)\r\n//         .then((response) => {\r\n//           if (!response.ok) {\r\n//             throw new Error('Failed to fetch analysis data.');\r\n//           }\r\n//           return response.json();\r\n//         })\r\n//         .then((data) => {\r\n//           if (data.success) {\r\n//             setAnalysisResults(data.results);\r\n//           } else {\r\n//             setError(data.message || 'No analysis data found.');\r\n//           }\r\n//         })\r\n//         .catch((err) => {\r\n//           setError(err.message);\r\n//         });\r\n//     }\r\n//   }, [username]);\r\n\r\n//   return (\r\n//     <div className=\"analysis-page\">\r\n//       <h1>Analysis Results for {username}</h1>\r\n//       {error && <p className=\"error-message\" style={{ color: 'red' }}>{error}</p>}\r\n//       <div id=\"analysis-container\">\r\n//         {analysisResults.length > 0 ? (\r\n//           analysisResults.map((result, index) => (\r\n//             <div key={index}>\r\n//               <img\r\n//                 src={`http://localhost:5000/${result.imagePath}`}\r\n//                 alt=\"User Image\"\r\n//                 style={{ width: '200px', margin: '10px' }}\r\n//               />\r\n//               <p>Analysis: {JSON.stringify(result.analysis)}</p>\r\n//             </div>\r\n//           ))\r\n//         ) : (\r\n//           <p>No analysis results available.</p>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AnalysisPage;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}