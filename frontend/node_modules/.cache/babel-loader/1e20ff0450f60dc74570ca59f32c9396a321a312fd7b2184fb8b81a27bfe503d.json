{"ast":null,"code":"var _jsxFileName = \"D:\\\\sachin\\\\frontend\\\\src\\\\components\\\\QuizGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport quizData from '../quizData';\nimport Confetti from './Confetti';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuizGame({\n  playerName\n}) {\n  _s();\n  const [backgroundColor, setBackgroundColor] = useState('default');\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [reachedQuizEnd, setReachedQuizEnd] = useState(false);\n  const [capturedImages, setCapturedImages] = useState([]);\n  const [uploadedImageUrls, setUploadedImageUrls] = useState([]);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const captureIntervalRef = useRef(null);\n  const timerRef = useRef(null);\n\n  // Start webcam and begin face capture\n  const startWebcamCapture = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: 640,\n          height: 480\n        }\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.onloadedmetadata = () => {\n          videoRef.current.play();\n        };\n        captureIntervalRef.current = setInterval(() => {\n          captureImage();\n        }, 5000);\n      }\n    } catch (error) {\n      console.error('Error accessing webcam:', error);\n    }\n  };\n\n  // Stop webcam capture\n  const stopWebcamCapture = () => {\n    if (captureIntervalRef.current) {\n      clearInterval(captureIntervalRef.current);\n      captureIntervalRef.current = null;\n    }\n    if (videoRef.current && videoRef.current.srcObject) {\n      const tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n  };\n  const captureImage = async () => {\n    if (canvasRef.current && videoRef.current) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n      const imageDataURL = canvas.toDataURL('image/jpeg');\n      const base64Response = await fetch(imageDataURL);\n      const blob = await base64Response.blob();\n      await handleImageUpload(blob);\n      setCapturedImages(prevImages => [...prevImages, imageDataURL]);\n    }\n  };\n\n  // Handle image upload with username\n  const handleImageUpload = async imageBlob => {\n    try {\n      const formData = new FormData();\n      formData.append('image', imageBlob, 'captured-image.jpg');\n      formData.append('username', playerName); // Include the username in the request\n\n      const response = await axios.post('http://localhost:5000/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.fileUrl) {\n        setUploadedImageUrls(prev => [...prev, response.data.fileUrl]);\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  const startTimer = () => {\n    if (timerRef.current) clearInterval(timerRef.current); // Clear any previous timers\n    setTimeLeft(10);\n    timerRef.current = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev === 1) {\n          clearInterval(timerRef.current);\n          handleNextQuestion();\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n  const handleNextQuestion = () => {\n    setBackgroundColor('default');\n    if (currentQuestion < quizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimeLeft(30);\n    } else {\n      setReachedQuizEnd(true);\n      setShowScore(true);\n      setShowConfetti(true);\n      stopWebcamCapture();\n      clearInterval(timerRef.current);\n    }\n  };\n  useEffect(() => {\n    startWebcamCapture();\n    startTimer();\n    return () => {\n      stopWebcamCapture();\n      clearInterval(timerRef.current);\n    };\n  }, []);\n  const handleAnswerOptionClick = index => {\n    if (index === quizData[currentQuestion].answer) {\n      setScore(score + 1);\n      setBackgroundColor('correct');\n    } else {\n      setBackgroundColor('incorrect');\n    }\n    setTimeout(handleNextQuestion, 500);\n  };\n  const handleRestartQuiz = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n    setTimeLeft(30);\n    setShowConfetti(false);\n    setBackgroundColor('default');\n    setReachedQuizEnd(false);\n    setCapturedImages([]);\n    setUploadedImageUrls([]);\n    startWebcamCapture();\n    startTimer();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `one ${backgroundColor}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"webcam-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 640,\n          height: 480,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 26\n      }, this), showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\uD83C\\uDF89 Congratulations \", playerName, \"! \\uD83C\\uDF89\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Your Score: \", score, \" / \", quizData.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRestartQuiz,\n          children: \"Restart Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-fill\",\n            style: {\n              width: `${(currentQuestion + 1) / quizData.length * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [\"Time Left: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: quizData[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), quizData[currentQuestion].image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: quizData[currentQuestion].image,\n            alt: \"quiz illustration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: quizData[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAnswerOptionClick(index),\n              className: \"option-button\",\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizGame, \"mFoUCz9kmwjWZNoWuXxz9lRaw4M=\");\n_c = QuizGame;\nexport default QuizGame;\nvar _c;\n$RefreshReg$(_c, \"QuizGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","quizData","Confetti","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizGame","playerName","_s","backgroundColor","setBackgroundColor","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","showConfetti","setShowConfetti","reachedQuizEnd","setReachedQuizEnd","capturedImages","setCapturedImages","uploadedImageUrls","setUploadedImageUrls","videoRef","canvasRef","captureIntervalRef","timerRef","startWebcamCapture","stream","navigator","mediaDevices","getUserMedia","video","width","height","current","srcObject","onloadedmetadata","play","setInterval","captureImage","error","console","stopWebcamCapture","clearInterval","tracks","getTracks","forEach","track","stop","canvas","context","getContext","drawImage","imageDataURL","toDataURL","base64Response","fetch","blob","handleImageUpload","prevImages","imageBlob","formData","FormData","append","response","post","headers","data","fileUrl","prev","startTimer","handleNextQuestion","length","handleAnswerOptionClick","index","answer","setTimeout","handleRestartQuiz","className","children","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","image","src","alt","options","map","option","_c","$RefreshReg$"],"sources":["D:/sachin/frontend/src/components/QuizGame.js"],"sourcesContent":["\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport quizData from '../quizData';\r\nimport Confetti from './Confetti';\r\nimport './Quiz.css';\r\n\r\nfunction QuizGame({ playerName }) {\r\n  const [backgroundColor, setBackgroundColor] = useState('default');\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(10);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [reachedQuizEnd, setReachedQuizEnd] = useState(false);\r\n  const [capturedImages, setCapturedImages] = useState([]);\r\n  const [uploadedImageUrls, setUploadedImageUrls] = useState([]);\r\n\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const captureIntervalRef = useRef(null);\r\n  const timerRef = useRef(null);\r\n\r\n  // Start webcam and begin face capture\r\n  const startWebcamCapture = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: { width: 640, height: 480 },\r\n      });\r\n\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.onloadedmetadata = () => {\r\n          videoRef.current.play();\r\n        };\r\n\r\n        captureIntervalRef.current = setInterval(() => {\r\n          captureImage();\r\n        }, 5000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error accessing webcam:', error);\r\n    }\r\n  };\r\n\r\n  // Stop webcam capture\r\n  const stopWebcamCapture = () => {\r\n    if (captureIntervalRef.current) {\r\n      clearInterval(captureIntervalRef.current);\r\n      captureIntervalRef.current = null;\r\n    }\r\n\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      const tracks = videoRef.current.srcObject.getTracks();\r\n      tracks.forEach((track) => track.stop());\r\n      videoRef.current.srcObject = null;\r\n    }\r\n  };\r\n\r\n  const captureImage = async () => {\r\n    if (canvasRef.current && videoRef.current) {\r\n      const canvas = canvasRef.current;\r\n      const context = canvas.getContext('2d');\r\n      context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\r\n\r\n      const imageDataURL = canvas.toDataURL('image/jpeg');\r\n      const base64Response = await fetch(imageDataURL);\r\n      const blob = await base64Response.blob();\r\n\r\n      await handleImageUpload(blob);\r\n\r\n      setCapturedImages((prevImages) => [...prevImages, imageDataURL]);\r\n    }\r\n  };\r\n\r\n  // Handle image upload with username\r\n  const handleImageUpload = async (imageBlob) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('image', imageBlob, 'captured-image.jpg');\r\n      formData.append('username', playerName); // Include the username in the request\r\n\r\n      const response = await axios.post('http://localhost:5000/api/upload', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n\r\n      if (response.data.fileUrl) {\r\n        setUploadedImageUrls((prev) => [...prev, response.data.fileUrl]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n    }\r\n  };\r\n\r\n  const startTimer = () => {\r\n    if (timerRef.current) clearInterval(timerRef.current); // Clear any previous timers\r\n    setTimeLeft(10);\r\n\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev === 1) {\r\n          clearInterval(timerRef.current);\r\n          handleNextQuestion();\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    setBackgroundColor('default');\r\n    if (currentQuestion < quizData.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setTimeLeft(30);\r\n    } else {\r\n      setReachedQuizEnd(true);\r\n      setShowScore(true);\r\n      setShowConfetti(true);\r\n      stopWebcamCapture();\r\n      clearInterval(timerRef.current);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    startWebcamCapture();\r\n    startTimer();\r\n\r\n    return () => {\r\n      stopWebcamCapture();\r\n      clearInterval(timerRef.current);\r\n    };\r\n  }, []);\r\n\r\n  const handleAnswerOptionClick = (index) => {\r\n    if (index === quizData[currentQuestion].answer) {\r\n      setScore(score + 1);\r\n      setBackgroundColor('correct');\r\n    } else {\r\n      setBackgroundColor('incorrect');\r\n    }\r\n    setTimeout(handleNextQuestion, 500);\r\n  };\r\n\r\n  const handleRestartQuiz = () => {\r\n    setCurrentQuestion(0);\r\n    setScore(0);\r\n    setShowScore(false);\r\n    setTimeLeft(30);\r\n    setShowConfetti(false);\r\n    setBackgroundColor('default');\r\n    setReachedQuizEnd(false);\r\n    setCapturedImages([]);\r\n    setUploadedImageUrls([]);\r\n    startWebcamCapture();\r\n    startTimer();\r\n  };\r\n\r\n  return (\r\n    <div className={`one ${backgroundColor}`}>\r\n      <div className=\"quiz\">\r\n        {/* Video and Canvas for Webcam */}\r\n        <div className=\"webcam-container\">\r\n          <video ref={videoRef} style={{ display: 'none' }}></video>\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={640}\r\n            height={480}\r\n            style={{ display: 'none' }}\r\n          ></canvas>\r\n        </div>\r\n\r\n        {showConfetti && <Confetti />}\r\n        {showScore ? (\r\n          <div className=\"score-section\">\r\n            <h1>🎉 Congratulations {playerName}! 🎉</h1>\r\n            <h2>Your Score: {score} / {quizData.length}</h2>\r\n            <button onClick={handleRestartQuiz}>Restart Quiz</button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"progress-bar\">\r\n              <div\r\n                className=\"progress-bar-fill\"\r\n                style={{\r\n                  width: `${((currentQuestion + 1) / quizData.length) * 100}%`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"timer\">Time Left: {timeLeft}s</div>\r\n            <div className=\"question-section\">\r\n              <h2>{quizData[currentQuestion].question}</h2>\r\n              {quizData[currentQuestion].image && (\r\n                <img\r\n                  src={quizData[currentQuestion].image}\r\n                  alt=\"quiz illustration\"\r\n                />\r\n              )}\r\n              <div className=\"options\">\r\n                {quizData[currentQuestion].options.map((option, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => handleAnswerOptionClick(index)}\r\n                    className=\"option-button\"\r\n                  >\r\n                    {option}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}