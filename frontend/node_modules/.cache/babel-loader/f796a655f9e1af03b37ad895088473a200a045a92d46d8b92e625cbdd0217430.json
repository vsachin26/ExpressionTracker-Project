{"ast":null,"code":"var _jsxFileName = \"D:\\\\sachin\\\\frontend\\\\src\\\\components\\\\AnalysisPage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// const AnalysisPage = () => {\n//   const [results, setResults] = useState('Loading...');\n//   const [error, setError] = useState(null);\n//   const location = useLocation(); // Use location to get the query parameters\n\n//   useEffect(() => {\n//     const urlParams = new URLSearchParams(location.search); // Get query params from URL\n//     const user = urlParams.get('user'); // Get the 'user' parameter\n\n//     if (!user) {\n//       setResults(\"No user specified.\");\n//     } else {\n//       fetch(`/process-photos/${user}`)\n//         .then(response => response.json())\n//         .then(data => {\n//           if (data.success) {\n//             setResults(JSON.stringify(data.results, null, 2));\n//           } else {\n//             setResults(data.message || 'Error fetching analysis results.');\n//           }\n//         })\n//         .catch(error => {\n//           setError(error.message);\n//           setResults('Error: ' + error.message);\n//         });\n//     }\n//   }, [location]); // Re-run the effect when the location changes\n\n//   return (\n//     <div>\n//       <h1>Analysis Results</h1>\n//       <pre>{results}</pre>\n//       {error && <div style={{ color: 'red' }}>Error: {error}</div>}\n//     </div>\n//   );\n// };\n\n// export default AnalysisPage;\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnalysisPage = () => {\n  _s();\n  const [analysisResults, setAnalysisResults] = useState([]);\n  const [error, setError] = useState('');\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const username = queryParams.get('user'); // Get the username from query params\n\n  useEffect(() => {\n    // Fetch analysis data for the user\n    if (username) {\n      fetch(`http://localhost:5000/get-analysis/${username}`).then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch analysis data.');\n        }\n        return response.json();\n      }).then(data => {\n        if (data.success) {\n          setAnalysisResults(data.results);\n        } else {\n          setError(data.message || 'No analysis data found.');\n        }\n      }).catch(err => {\n        setError(err.message);\n      });\n    }\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analysis-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Analysis Results for \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"analysis-container\",\n      children: analysisResults.length > 0 ? analysisResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/${result.imagePath}`,\n          alt: \"User Image\",\n          style: {\n            width: '200px',\n            margin: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Analysis: \", JSON.stringify(result.analysis)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No analysis results available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AnalysisPage, \"iR/v3qZYJulY0E0np80hi6J9ehA=\", false, function () {\n  return [useLocation];\n});\n_c = AnalysisPage;\nexport default AnalysisPage;\nvar _c;\n$RefreshReg$(_c, \"AnalysisPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","AnalysisPage","_s","analysisResults","setAnalysisResults","error","setError","location","queryParams","URLSearchParams","search","username","get","fetch","then","response","ok","Error","json","data","success","results","message","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","id","length","map","result","index","src","imagePath","alt","width","margin","JSON","stringify","analysis","_c","$RefreshReg$"],"sources":["D:/sachin/frontend/src/components/AnalysisPage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\n// const AnalysisPage = () => {\r\n//   const [results, setResults] = useState('Loading...');\r\n//   const [error, setError] = useState(null);\r\n//   const location = useLocation(); // Use location to get the query parameters\r\n\r\n//   useEffect(() => {\r\n//     const urlParams = new URLSearchParams(location.search); // Get query params from URL\r\n//     const user = urlParams.get('user'); // Get the 'user' parameter\r\n\r\n//     if (!user) {\r\n//       setResults(\"No user specified.\");\r\n//     } else {\r\n//       fetch(`/process-photos/${user}`)\r\n//         .then(response => response.json())\r\n//         .then(data => {\r\n//           if (data.success) {\r\n//             setResults(JSON.stringify(data.results, null, 2));\r\n//           } else {\r\n//             setResults(data.message || 'Error fetching analysis results.');\r\n//           }\r\n//         })\r\n//         .catch(error => {\r\n//           setError(error.message);\r\n//           setResults('Error: ' + error.message);\r\n//         });\r\n//     }\r\n//   }, [location]); // Re-run the effect when the location changes\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Analysis Results</h1>\r\n//       <pre>{results}</pre>\r\n//       {error && <div style={{ color: 'red' }}>Error: {error}</div>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AnalysisPage;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst AnalysisPage = () => {\r\n  const [analysisResults, setAnalysisResults] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const username = queryParams.get('user'); // Get the username from query params\r\n\r\n  useEffect(() => {\r\n    // Fetch analysis data for the user\r\n    if (username) {\r\n      fetch(`http://localhost:5000/get-analysis/${username}`)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch analysis data.');\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          if (data.success) {\r\n            setAnalysisResults(data.results);\r\n          } else {\r\n            setError(data.message || 'No analysis data found.');\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setError(err.message);\r\n        });\r\n    }\r\n  }, [username]);\r\n\r\n  return (\r\n    <div className=\"analysis-page\">\r\n      <h1>Analysis Results for {username}</h1>\r\n      {error && <p className=\"error-message\" style={{ color: 'red' }}>{error}</p>}\r\n      <div id=\"analysis-container\">\r\n        {analysisResults.length > 0 ? (\r\n          analysisResults.map((result, index) => (\r\n            <div key={index}>\r\n              <img\r\n                src={`http://localhost:5000/${result.imagePath}`}\r\n                alt=\"User Image\"\r\n                style={{ width: '200px', margin: '10px' }}\r\n              />\r\n              <p>Analysis: {JSON.stringify(result.analysis)}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No analysis results available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalysisPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}