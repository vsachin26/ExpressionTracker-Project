{"ast":null,"code":"var _jsxFileName = \"D:\\\\sachin\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const UserDashboard = () => {\n//     const [users, setUsers] = useState([]);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         // Fetch the user list when the component mounts\n//         fetch('/list-users')\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 if (data.success && Array.isArray(data.users)) {\n//                     setUsers(data.users);\n//                 } else {\n//                     alert('No users found or an error occurred.');\n//                 }\n//             })\n//             .catch((error) => {\n//                 console.error('Error fetching users:', error);\n//                 alert('Failed to fetch users.');\n//             });\n//     }, []);\n\n//     const handleFetchAnalysis = (user) => {\n//         navigate(`/analysis?user=${encodeURIComponent(user)}`);\n//     };\n\n//     return (\n//         <div>\n//             <h1>User Analysis Dashboard</h1>\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         <th>User</th>\n//                         <th>Action</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {users.length > 0 ? (\n//                         users.map((user, index) => (\n//                             <tr key={index}>\n//                                 <td>{user}</td>\n//                                 <td>\n//                                     <button onClick={() => handleFetchAnalysis(user)}>Fetch</button>\n//                                 </td>\n//                             </tr>\n//                         ))\n//                     ) : (\n//                         <tr>\n//                             <td colSpan=\"2\">No users available.</td>\n//                         </tr>\n//                     )}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// };\n\n// export default UserDashboard;\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Import Link for navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [users, setUsers] = useState([]); // State to store users\n  const [error, setError] = useState(null); // State to store errors\n\n  useEffect(() => {\n    // Fetch the user list from the backend\n    fetch('http://localhost:5000/api/list-users') // Ensure your backend is running and this URL is correct\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch users');\n      }\n      return response.json(); // Parse the JSON response\n    }).then(data => {\n      if (data.success && Array.isArray(data.users)) {\n        setUsers(data.users); // Set the users in state\n      } else {\n        setError('No users found.');\n      }\n    }).catch(err => {\n      console.error('Error fetching users:', err);\n      setError('Failed to fetch users.');\n    });\n  }, []); // Run only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      backgroundColor: '#f8e8a0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: '#2d3748'\n      },\n      children: \"User Analysis Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this) : users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '8px'\n            },\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '8px'\n            },\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '8px'\n            },\n            children: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '8px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/analysis?user=${user}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  padding: '5px 10px',\n                  backgroundColor: '#4CAF50',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                },\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"W8dPUmt9Ai9400zDPm7RH8jUmB4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Dashboard","_s","users","setUsers","error","setError","fetch","then","response","ok","Error","json","data","success","Array","isArray","catch","err","console","style","padding","backgroundColor","children","color","fileName","_jsxFileName","lineNumber","columnNumber","length","width","borderCollapse","border","map","user","index","to","borderRadius","cursor","_c","$RefreshReg$"],"sources":["D:/sachin/frontend/src/components/Dashboard.js"],"sourcesContent":["\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const UserDashboard = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         // Fetch the user list when the component mounts\r\n//         fetch('/list-users')\r\n//             .then((response) => response.json())\r\n//             .then((data) => {\r\n//                 if (data.success && Array.isArray(data.users)) {\r\n//                     setUsers(data.users);\r\n//                 } else {\r\n//                     alert('No users found or an error occurred.');\r\n//                 }\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error('Error fetching users:', error);\r\n//                 alert('Failed to fetch users.');\r\n//             });\r\n//     }, []);\r\n\r\n//     const handleFetchAnalysis = (user) => {\r\n//         navigate(`/analysis?user=${encodeURIComponent(user)}`);\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>User Analysis Dashboard</h1>\r\n//             <table>\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>User</th>\r\n//                         <th>Action</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {users.length > 0 ? (\r\n//                         users.map((user, index) => (\r\n//                             <tr key={index}>\r\n//                                 <td>{user}</td>\r\n//                                 <td>\r\n//                                     <button onClick={() => handleFetchAnalysis(user)}>Fetch</button>\r\n//                                 </td>\r\n//                             </tr>\r\n//                         ))\r\n//                     ) : (\r\n//                         <tr>\r\n//                             <td colSpan=\"2\">No users available.</td>\r\n//                         </tr>\r\n//                     )}\r\n//                 </tbody>\r\n//             </table>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default UserDashboard;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Import Link for navigation\r\n\r\nconst Dashboard = () => {\r\n    const [users, setUsers] = useState([]); // State to store users\r\n    const [error, setError] = useState(null); // State to store errors\r\n\r\n    useEffect(() => {\r\n        // Fetch the user list from the backend\r\n        fetch('http://localhost:5000/api/list-users') // Ensure your backend is running and this URL is correct\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch users');\r\n                }\r\n                return response.json(); // Parse the JSON response\r\n            })\r\n            .then((data) => {\r\n                if (data.success && Array.isArray(data.users)) {\r\n                    setUsers(data.users); // Set the users in state\r\n                } else {\r\n                    setError('No users found.');\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.error('Error fetching users:', err);\r\n                setError('Failed to fetch users.');\r\n            });\r\n    }, []); // Run only once when the component mounts\r\n\r\n    return (\r\n        <div style={{ padding: '20px', backgroundColor: '#f8e8a0' }}>\r\n            <h1 style={{ color: '#2d3748' }}>User Analysis Dashboard</h1>\r\n            {error ? (\r\n                <p style={{ color: 'red' }}>{error}</p>\r\n            ) : users.length === 0 ? (\r\n                <p>No users available.</p>\r\n            ) : (\r\n                <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ border: '1px solid #ccc', padding: '8px' }}>User</th>\r\n                            <th style={{ border: '1px solid #ccc', padding: '8px' }}>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map((user, index) => (\r\n                            <tr key={index}>\r\n                                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{user}</td>\r\n                                <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                                    {/* Use Link from react-router-dom to navigate to the analysis page */}\r\n                                    <Link to={`/analysis?user=${user}`}>\r\n                                        <button\r\n                                            style={{\r\n                                                padding: '5px 10px',\r\n                                                backgroundColor: '#4CAF50',\r\n                                                color: 'white',\r\n                                                border: 'none',\r\n                                                borderRadius: '4px',\r\n                                                cursor: 'pointer',\r\n                                            }}\r\n                                        >\r\n                                            View Details\r\n                                        </button>\r\n                                    </Link>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}