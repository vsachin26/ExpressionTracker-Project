{"ast":null,"code":"var _jsxFileName = \"D:\\\\sachin\\\\frontend\\\\src\\\\components\\\\EnterNamePage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './EnterNamePage.css'; // For styling\n\n// const EnterNamePage = ({ setPlayerName }) => {\n//   const [name, setName] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleInputChange = (event) => {\n//     setName(event.target.value);\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     if (name) {\n//       setPlayerName(name); // Set player name in parent state\n//       navigate('/quiz'); // Navigate to the quiz page\n//     } else {\n//       alert(\"Please enter your name.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"form-container\">\n//         <form onSubmit={handleSubmit}>\n//           <label htmlFor=\"name\">Enter your name:</label>\n//           <input\n//             type=\"text\"\n//             id=\"name\"\n//             value={name}\n//             onChange={handleInputChange}\n//             placeholder=\"Your name\"\n//             required\n//           />\n//           <button type=\"submit\">Start Quiz</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EnterNamePage;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './EnterNamePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnterNamePage = ({\n  setPlayerName\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (name) {\n      try {\n        const response = await fetch('http://localhost:5000/add-user', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name\n          })\n        });\n        const result = await response.json();\n        if (result.success) {\n          setPlayerName(name);\n          localStorage.setItem('playerName', name); // Save name for persistence\n          navigate('/quiz');\n        } else {\n          alert(result.message || 'Error saving name. Please try again.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert('Failed to save your name. Please try again.');\n      }\n    } else {\n      alert('Please enter your name.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Enter your name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"Your name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Start Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(EnterNamePage, \"jzmPVS2gFeu7vdTfLSLEP99uZoo=\", false, function () {\n  return [useNavigate];\n});\n_c = EnterNamePage;\nexport default EnterNamePage;\nvar _c;\n$RefreshReg$(_c, \"EnterNamePage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","EnterNamePage","setPlayerName","_s","name","setName","navigate","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","success","localStorage","setItem","alert","message","error","console","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","placeholder","required","_c","$RefreshReg$"],"sources":["D:/sachin/frontend/src/components/EnterNamePage.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './EnterNamePage.css'; // For styling\r\n\r\n// const EnterNamePage = ({ setPlayerName }) => {\r\n//   const [name, setName] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleInputChange = (event) => {\r\n//     setName(event.target.value);\r\n//   };\r\n\r\n//   const handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     if (name) {\r\n//       setPlayerName(name); // Set player name in parent state\r\n//       navigate('/quiz'); // Navigate to the quiz page\r\n//     } else {\r\n//       alert(\"Please enter your name.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <div className=\"form-container\">\r\n//         <form onSubmit={handleSubmit}>\r\n//           <label htmlFor=\"name\">Enter your name:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"name\"\r\n//             value={name}\r\n//             onChange={handleInputChange}\r\n//             placeholder=\"Your name\"\r\n//             required\r\n//           />\r\n//           <button type=\"submit\">Start Quiz</button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EnterNamePage;\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './EnterNamePage.css';\r\n\r\nconst EnterNamePage = ({ setPlayerName }) => {\r\n    const [name, setName] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (name) {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/add-user', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ name }),\r\n                });\r\n\r\n                const result = await response.json();\r\n\r\n                if (result.success) {\r\n                    setPlayerName(name);\r\n                    localStorage.setItem('playerName', name); // Save name for persistence\r\n                    navigate('/quiz');\r\n                } else {\r\n                    alert(result.message || 'Error saving name. Please try again.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                alert('Failed to save your name. Please try again.');\r\n            }\r\n        } else {\r\n            alert('Please enter your name.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"name\">Enter your name:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    placeholder=\"Your name\"\r\n                    required\r\n                />\r\n                <button type=\"submit\">Start Quiz</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EnterNamePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}