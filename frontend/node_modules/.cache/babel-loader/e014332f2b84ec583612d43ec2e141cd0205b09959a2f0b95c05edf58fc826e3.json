{"ast":null,"code":"var _jsxFileName = \"D:\\\\sachin\\\\frontend\\\\src\\\\components\\\\QuizGame.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import quizData from '../quizData';\n// import Confetti from './Confetti';\n// import './Quiz.css';\n\n// function QuizGame({ playerName }) {\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const [score, setScore] = useState(0);\n//   const [showScore, setShowScore] = useState(false);\n//   const [timeLeft, setTimeLeft] = useState(30);\n//   const [showConfetti, setShowConfetti] = useState(false);\n//   const [backgroundColor, setBackgroundColor] = useState('default');\n\n//   const handleNextQuestion = () => {\n//     setBackgroundColor('default');\n//     if (currentQuestion < quizData.length - 1) {\n//       setCurrentQuestion(currentQuestion + 1);\n//       setTimeLeft(30);\n//     } else {\n//       setShowScore(true);\n//       setShowConfetti(true);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (timeLeft > 0) {\n//       const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n//       return () => clearTimeout(timer);\n//     } else {\n//       handleNextQuestion();\n//     }\n//   }, [timeLeft]);\n\n//   const handleAnswerOptionClick = (index) => {\n//     if (index === quizData[currentQuestion].answer) {\n//       setScore(score + 1);\n//       setBackgroundColor('correct');\n//     } else {\n//       setBackgroundColor('incorrect');\n//     }\n//     setTimeout(handleNextQuestion, 2000);\n//   };\n\n//   const handleRestartQuiz = () => {\n//     setCurrentQuestion(0);\n//     setScore(0);\n//     setShowScore(false);\n//     setTimeLeft(30);\n//     setShowConfetti(false);\n//     setBackgroundColor('default');\n//   };\n\n//   return (\n//     <div className={`one ${backgroundColor}`}>\n//       <div className=\"quiz\">\n//         {showConfetti && <Confetti />}\n//         {showScore ? (\n//           <div className=\"score-section\">\n//             <h1>ðŸŽ‰ Congratulations {playerName}! ðŸŽ‰</h1>\n//             <h2>Your Score: {score} / {quizData.length}</h2>\n//             <button onClick={handleRestartQuiz}>Restart Quiz</button>\n//           </div>\n//         ) : (\n//           <>\n//             <div className=\"progress-bar\">\n//               <div\n//                 className=\"progress-bar-fill\"\n//                 style={{\n//                   width: `${((currentQuestion + 1) / quizData.length) * 100}%`,\n//                 }}\n//               ></div>\n//             </div>\n//             <div className=\"timer\">Time Left: {timeLeft}s</div>\n//             <div className=\"question-section\">\n//               <h2>{quizData[currentQuestion].question}</h2>\n//               {quizData[currentQuestion].image && (\n//                 <img\n//                   src={quizData[currentQuestion].image}\n//                   alt=\"quiz illustration\"\n//                 />\n//               )}\n//               <div className=\"options\">\n//                 {quizData[currentQuestion].options.map((option, index) => (\n//                   <button\n//                     key={index}\n//                     onClick={() => handleAnswerOptionClick(index)}\n//                     className=\"option-button\"\n//                   >\n//                     {option}\n//                   </button>\n//                 ))}\n//               </div>\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default QuizGame;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport quizData from '../quizData';\nimport Confetti from './Confetti';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuizGame({\n  playerName\n}) {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useState('default');\n  const videoRef = useRef(null);\n  const captureInterval = useRef(null);\n  const handleNextQuestion = () => {\n    setBackgroundColor('default');\n    if (currentQuestion < quizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimeLeft(30);\n    } else {\n      setShowScore(true);\n      setShowConfetti(true);\n    }\n  };\n\n  // Timer for each question\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else {\n      handleNextQuestion();\n    }\n  }, [timeLeft]);\n\n  // Handle answer selection\n  const handleAnswerOptionClick = index => {\n    if (index === quizData[currentQuestion].answer) {\n      setScore(score + 1);\n      setBackgroundColor('correct');\n    } else {\n      setBackgroundColor('incorrect');\n    }\n    setTimeout(handleNextQuestion, 2000);\n  };\n\n  // Handle quiz restart\n  const handleRestartQuiz = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n    setTimeLeft(30);\n    setShowConfetti(false);\n    setBackgroundColor('default');\n  };\n\n  // Capture images every 5 seconds\n  useEffect(() => {\n    // \n\n    const captureImage = () => {\n      if (videoRef.current && !showScore) {\n        const canvas = document.createElement('canvas');\n        canvas.width = videoRef.current.videoWidth;\n        canvas.height = videoRef.current.videoHeight;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n        const imageData = canvas.toDataURL('image/jpeg');\n\n        // Send image to the backend\n        fetch('http://localhost:5000/upload-image', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: playerName,\n            image: imageData\n          })\n        }).then(response => response.json()).then(data => {\n          if (!data.success) {\n            console.error('Failed to save image:', data.message);\n          }\n        }).catch(error => console.error('Error uploading image:', error));\n      }\n    };\n    if (!showScore) {\n      startWebcam();\n    }\n    return () => {\n      var _videoRef$current;\n      // Clean up webcam and stop intervals\n      if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n      clearInterval(captureInterval.current);\n    };\n  }, [showScore, playerName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `one ${backgroundColor}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 26\n      }, this), showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\uD83C\\uDF89 Congratulations \", playerName, \"! \\uD83C\\uDF89\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Your Score: \", score, \" / \", quizData.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRestartQuiz,\n          children: \"Restart Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-fill\",\n            style: {\n              width: `${(currentQuestion + 1) / quizData.length * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [\"Time Left: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: quizData[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), quizData[currentQuestion].image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: quizData[currentQuestion].image,\n            alt: \"quiz illustration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: quizData[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAnswerOptionClick(index),\n              className: \"option-button\",\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizGame, \"Lof9DtAuBFr2LL8SMVX6OU9aa00=\");\n_c = QuizGame;\nexport default QuizGame;\nvar _c;\n$RefreshReg$(_c, \"QuizGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","quizData","Confetti","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizGame","playerName","_s","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","showConfetti","setShowConfetti","backgroundColor","setBackgroundColor","videoRef","captureInterval","handleNextQuestion","length","timer","setTimeout","clearTimeout","handleAnswerOptionClick","index","answer","handleRestartQuiz","captureImage","current","canvas","document","createElement","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","imageData","toDataURL","fetch","method","headers","body","JSON","stringify","username","image","then","response","json","data","success","console","error","message","catch","startWebcam","_videoRef$current","srcObject","getTracks","forEach","track","stop","clearInterval","className","children","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","src","alt","options","map","option","_c","$RefreshReg$"],"sources":["D:/sachin/frontend/src/components/QuizGame.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import quizData from '../quizData';\r\n// import Confetti from './Confetti';\r\n// import './Quiz.css';\r\n\r\n// function QuizGame({ playerName }) {\r\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\r\n//   const [score, setScore] = useState(0);\r\n//   const [showScore, setShowScore] = useState(false);\r\n//   const [timeLeft, setTimeLeft] = useState(30);\r\n//   const [showConfetti, setShowConfetti] = useState(false);\r\n//   const [backgroundColor, setBackgroundColor] = useState('default');\r\n\r\n//   const handleNextQuestion = () => {\r\n//     setBackgroundColor('default');\r\n//     if (currentQuestion < quizData.length - 1) {\r\n//       setCurrentQuestion(currentQuestion + 1);\r\n//       setTimeLeft(30);\r\n//     } else {\r\n//       setShowScore(true);\r\n//       setShowConfetti(true);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (timeLeft > 0) {\r\n//       const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n//       return () => clearTimeout(timer);\r\n//     } else {\r\n//       handleNextQuestion();\r\n//     }\r\n//   }, [timeLeft]);\r\n\r\n//   const handleAnswerOptionClick = (index) => {\r\n//     if (index === quizData[currentQuestion].answer) {\r\n//       setScore(score + 1);\r\n//       setBackgroundColor('correct');\r\n//     } else {\r\n//       setBackgroundColor('incorrect');\r\n//     }\r\n//     setTimeout(handleNextQuestion, 2000);\r\n//   };\r\n\r\n//   const handleRestartQuiz = () => {\r\n//     setCurrentQuestion(0);\r\n//     setScore(0);\r\n//     setShowScore(false);\r\n//     setTimeLeft(30);\r\n//     setShowConfetti(false);\r\n//     setBackgroundColor('default');\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`one ${backgroundColor}`}>\r\n//       <div className=\"quiz\">\r\n//         {showConfetti && <Confetti />}\r\n//         {showScore ? (\r\n//           <div className=\"score-section\">\r\n//             <h1>ðŸŽ‰ Congratulations {playerName}! ðŸŽ‰</h1>\r\n//             <h2>Your Score: {score} / {quizData.length}</h2>\r\n//             <button onClick={handleRestartQuiz}>Restart Quiz</button>\r\n//           </div>\r\n//         ) : (\r\n//           <>\r\n//             <div className=\"progress-bar\">\r\n//               <div\r\n//                 className=\"progress-bar-fill\"\r\n//                 style={{\r\n//                   width: `${((currentQuestion + 1) / quizData.length) * 100}%`,\r\n//                 }}\r\n//               ></div>\r\n//             </div>\r\n//             <div className=\"timer\">Time Left: {timeLeft}s</div>\r\n//             <div className=\"question-section\">\r\n//               <h2>{quizData[currentQuestion].question}</h2>\r\n//               {quizData[currentQuestion].image && (\r\n//                 <img\r\n//                   src={quizData[currentQuestion].image}\r\n//                   alt=\"quiz illustration\"\r\n//                 />\r\n//               )}\r\n//               <div className=\"options\">\r\n//                 {quizData[currentQuestion].options.map((option, index) => (\r\n//                   <button\r\n//                     key={index}\r\n//                     onClick={() => handleAnswerOptionClick(index)}\r\n//                     className=\"option-button\"\r\n//                   >\r\n//                     {option}\r\n//                   </button>\r\n//                 ))}\r\n//               </div>\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default QuizGame;\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport quizData from '../quizData';\r\nimport Confetti from './Confetti';\r\nimport './Quiz.css';\r\n\r\nfunction QuizGame({ playerName }) {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [backgroundColor, setBackgroundColor] = useState('default');\r\n  const videoRef = useRef(null);\r\n  const captureInterval = useRef(null);\r\n\r\n  const handleNextQuestion = () => {\r\n    setBackgroundColor('default');\r\n    if (currentQuestion < quizData.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setTimeLeft(30);\r\n    } else {\r\n      setShowScore(true);\r\n      setShowConfetti(true);\r\n    }\r\n  };\r\n\r\n  // Timer for each question\r\n  useEffect(() => {\r\n    if (timeLeft > 0) {\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      handleNextQuestion();\r\n    }\r\n  }, [timeLeft]);\r\n\r\n  // Handle answer selection\r\n  const handleAnswerOptionClick = (index) => {\r\n    if (index === quizData[currentQuestion].answer) {\r\n      setScore(score + 1);\r\n      setBackgroundColor('correct');\r\n    } else {\r\n      setBackgroundColor('incorrect');\r\n    }\r\n    setTimeout(handleNextQuestion, 2000);\r\n  };\r\n\r\n  // Handle quiz restart\r\n  const handleRestartQuiz = () => {\r\n    setCurrentQuestion(0);\r\n    setScore(0);\r\n    setShowScore(false);\r\n    setTimeLeft(30);\r\n    setShowConfetti(false);\r\n    setBackgroundColor('default');\r\n  };\r\n\r\n  // Capture images every 5 seconds\r\n  useEffect(() => {\r\n    // \r\n    \r\n\r\n    const captureImage = () => {\r\n      if (videoRef.current && !showScore) {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = videoRef.current.videoWidth;\r\n        canvas.height = videoRef.current.videoHeight;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\r\n        const imageData = canvas.toDataURL('image/jpeg');\r\n\r\n        // Send image to the backend\r\n        fetch('http://localhost:5000/upload-image', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            username: playerName,\r\n            image: imageData,\r\n          }),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            if (!data.success) {\r\n              console.error('Failed to save image:', data.message);\r\n            }\r\n          })\r\n          .catch((error) => console.error('Error uploading image:', error));\r\n      }\r\n    };\r\n\r\n    if (!showScore) {\r\n      startWebcam();\r\n    }\r\n\r\n    return () => {\r\n      // Clean up webcam and stop intervals\r\n      if (videoRef.current?.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach((track) => track.stop());\r\n      }\r\n      clearInterval(captureInterval.current);\r\n    };\r\n  }, [showScore, playerName]);\r\n\r\n  return (\r\n    <div className={`one ${backgroundColor}`}>\r\n      <div className=\"quiz\">\r\n        <video ref={videoRef} style={{ display: 'none' }} />\r\n        {showConfetti && <Confetti />}\r\n        {showScore ? (\r\n          <div className=\"score-section\">\r\n            <h1>ðŸŽ‰ Congratulations {playerName}! ðŸŽ‰</h1>\r\n            <h2>Your Score: {score} / {quizData.length}</h2>\r\n            <button onClick={handleRestartQuiz}>Restart Quiz</button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"progress-bar\">\r\n              <div\r\n                className=\"progress-bar-fill\"\r\n                style={{\r\n                  width: `${((currentQuestion + 1) / quizData.length) * 100}%`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"timer\">Time Left: {timeLeft}s</div>\r\n            <div className=\"question-section\">\r\n              <h2>{quizData[currentQuestion].question}</h2>\r\n              {quizData[currentQuestion].image && (\r\n                <img\r\n                  src={quizData[currentQuestion].image}\r\n                  alt=\"quiz illustration\"\r\n                />\r\n              )}\r\n              <div className=\"options\">\r\n                {quizData[currentQuestion].options.map((option, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => handleAnswerOptionClick(index)}\r\n                    className=\"option-button\"\r\n                  >\r\n                    {option}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}